package lab5;// Generated by Selenium IDE

import org.hamcrest.core.AllOf;
import org.junit.*;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.io.File;
import java.io.IOException;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

@RunWith(Parameterized.class)
public class RecordChecker {
    private static WebDriver driver;
    private Map<String, Object> vars;
    private static StudentLoader studentLoader;
    private static Object[][] testcases;
    private static LinkedHashMap<String, String> stu_info;
    private static JavascriptExecutor js;

    private String name;
    private String id;

    // constructor
    public RecordChecker(String id, String name) {
        this.name = name;
        this.id = id;
    }

    @BeforeClass
    public static void beforeClass() {
        System.out.println("BeforeClass: Start chrome driver");
        System.setProperty("webdriver.chrome.driver", "/Users/albert/Codings/JavaProject/Software_Testing/cn/edu/tju/se/testing/src/lab5/driver/chromedriver");
        driver = new ChromeDriver();
        driver.get("http://118.178.137.170:8080/");
        js = (JavascriptExecutor) driver;
    }

    @AfterClass
    public static void afterClass() {
        System.out.println("AfterClass: Finish all tests");
        driver.quit();
    }

    @Before
    public void setUp() {
        System.out.println("BeforeTest: ");
    }

    @After
    public void tearDown() {
        System.out.println("AfterTest: ");
    }

    @Parameterized.Parameters
    public static Collection<Object[]> getData() {
        String file_path = "/Users/albert/Codings/JavaProject/Software_Testing/cn/edu/tju/se/testing/src/lab5/user_info.csv";
        studentLoader = new StudentLoader(file_path);
        try {
            stu_info = studentLoader.load_stu_info();
        } catch (IOException e) {
            e.printStackTrace();
        }

        Iterator it = stu_info.keySet().iterator();
        int i = 0;

        testcases = new Object[stu_info.size()][];
        while (it.hasNext()) {
            Object key = it.next();
            Object value = stu_info.get(key);
            testcases[i] = new Object[]{key, value};
            i += 1;
        }
        return Arrays.asList(testcases);
    }


    @Test
    public void verifystudent() {
//        System.out.println(this.name + " " + this.id);
        driver.manage().window().setSize(new Dimension(1440, 812));
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys(this.name);
        driver.findElement(By.cssSelector(".btn")).click();
        String web_name = driver.findElement(By.cssSelector(".table-striped")).findElements(By.tagName("td")).get(0).getText();
        String web_id = driver.findElement(By.cssSelector(".table-striped")).findElements(By.tagName("td")).get(1).getText();
//        System.out.println(this.name + " " + web_name + " " + this.id + " " + web_id);
        assertEquals(web_name, this.name);
        assertEquals(web_id, this.id);
        driver.navigate().back();
        driver.navigate().refresh();
    }
}
